version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_R_SERVER_URL=http://localhost:3001
      - NEXT_PUBLIC_N8N_URL=http://localhost:5678
    depends_on:
      - r-server
      - n8n
    restart: unless-stopped
    networks:
      - sqlchat-network

  r-server:
    build:
      context: ./r-server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - HOST=0.0.0.0
      - SERVER_URL=http://localhost:3001
    volumes:
      - r-server-data:/app/public
      - r-server-logs:/app/logs
    restart: unless-stopped
    networks:
      - sqlchat-network

  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - N8N_ENCRYPTION_KEY=your-encryption-key-here
      - WEBHOOK_URL=http://localhost:5678/
      - EXECUTIONS_PROCESS=main
      - GENERIC_TIMEZONE=Europe/Moscow
      # Подключение к PostgreSQL
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=postgres
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=S3cur1ty
      # OpenAI API
      - N8N_OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key}
    volumes:
      - n8n-data:/home/node/.n8n
      - ./workflows:/home/node/workflows
      - ./credentials:/home/node/.n8n/credentials
    restart: unless-stopped
    networks:
      - sqlchat-network
    depends_on:
      - postgres

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=S3cur1ty
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backup:/backup
    restart: unless-stopped
    networks:
      - sqlchat-network

networks:
  sqlchat-network:
    driver: bridge

volumes:
  r-server-data:
  r-server-logs:
  n8n-data:
  postgres-data: 