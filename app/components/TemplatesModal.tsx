'use client';

import { useState, useEffect } from 'react';
import { FiX, FiPlus, FiEdit2, FiTrash2, FiFileText, FiSave, FiDownload, FiUpload } from 'react-icons/fi';

interface Template {
  id: string;
  name: string;
  description: string;
  content: string;
  type: 'report' | 'reference';
  format: 'text' | 'pdf' | 'doc';
  fileUrl?: string; // URL –∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É —à–∞–±–ª–æ–Ω–∞
  createdAt: Date;
  updatedAt: Date;
}

interface TemplatesModalProps {
  isOpen: boolean;
  onClose: () => void;
  onTemplateSelect: (template: any, query?: string) => void;
  selectedFormat?: 'txt' | 'doc' | 'pdf';
  onFormatChange?: (format: 'txt' | 'doc' | 'pdf') => void;
}

export default function TemplatesModal({ 
  isOpen, 
  onClose, 
  onTemplateSelect,
  selectedFormat = 'txt',
  onFormatChange
}: TemplatesModalProps) {
  const [templates, setTemplates] = useState<Template[]>([]);
  const [isEditing, setIsEditing] = useState(false);
  const [editingTemplate, setEditingTemplate] = useState<Template | null>(null);
  const [showForm, setShowForm] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    description: '',
    content: '',
    type: 'report' as 'report' | 'reference',
    format: 'text' as 'text' | 'pdf' | 'doc'
  });
  const [uploadedFile, setUploadedFile] = useState<File | null>(null);
  const [queryInput, setQueryInput] = useState('');
  const [showQueryInput, setShowQueryInput] = useState(false);
  const [selectedTemplateForReport, setSelectedTemplateForReport] = useState<Template | null>(null);
  const [searchQuery, setSearchQuery] = useState('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω—ã –∏–∑ localStorage –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  useEffect(() => {
    if (isOpen) {
      loadTemplates();
    }
  }, [isOpen]);

  const loadTemplates = () => {
    try {
      const savedTemplates = localStorage.getItem('reportTemplates');
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ
      const defaultTemplates: Template[] = [
        {
          id: '1',
          name: '–°–ø—Ä–∞–≤–∫–∞ –ø–æ —Å–ø–æ—Ä—Ç–∑–∞–ª–∞–º –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ',
          description: '–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–æ—Ä—Ç–∑–∞–ª–∞—Ö —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π',
          content: `üìÑ –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Å–ø–æ—Ä—Ç–∑–∞–ª–∞–º –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ
–î–∞—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è: {–¥–∞—Ç–∞_—Å–æ–∑–¥–∞–Ω–∏—è}

üèôÔ∏è –ì–æ—Ä–æ–¥: {–≥–æ—Ä–æ–¥}
üìå –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Ä—Ç–∑–∞–ª–æ–≤: {–æ–±—â–µ–µ_–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–∑–∞–ª–æ–≤}
üßæ –°–ø–∏—Å–æ–∫ —Å–ø–æ—Ä—Ç–∑–∞–ª–æ–≤
‚Ññ	–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–ª–∞	–ê–¥—Ä–µ—Å	–í–∏–¥—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫	–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã	–ö–æ–Ω—Ç–∞–∫—Ç—ã
1	{–Ω–∞–∑–≤–∞–Ω–∏–µ_–∑–∞–ª–∞}	{–∞–¥—Ä–µ—Å}	{—Å–ø–∏—Å–æ–∫_—É—Å–ª—É–≥}	{–≥—Ä–∞—Ñ–∏–∫_—Ä–∞–±–æ—Ç—ã}	{—Ç–µ–ª–µ—Ñ–æ–Ω/—Å–∞–π—Ç}
2	...	...	...	...	...

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ª–æ–≤ —Å –±–∞—Å—Å–µ–π–Ω–∞–º–∏: {—á–∏—Å–ª–æ_—Å_–±–∞—Å—Å–µ–π–Ω–∞–º–∏}

–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ 24/7 –∑–∞–ª–æ–≤: {—á–∏—Å–ª–æ_–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—ã—Ö}

–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞: {—Å—Ä–µ–¥–Ω—è—è_—Ü–µ–Ω–∞} ‚Ç∏

–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–∏–¥—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {—Ç–æ–ø_—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫}

üèÖ –õ—É—á—à–∏–µ –∑–∞–ª—ã –ø–æ –æ—Ç–∑—ã–≤–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–ª–∞	–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞	–ö–æ–ª-–≤–æ –æ—Ç–∑—ã–≤–æ–≤
{–∑–∞–ª_1}	{—Ä–µ–π—Ç–∏–Ω–≥_1}‚≠êÔ∏è	{–æ—Ç–∑—ã–≤–æ–≤_1}
{–∑–∞–ª_2}	{—Ä–µ–π—Ç–∏–Ω–≥_2}‚≠êÔ∏è	{–æ—Ç–∑—ã–≤–æ–≤_2}
...	...	...

üó∫Ô∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ä–∞–π–æ–Ω–∞–º
–†–∞–π–æ–Ω	–ö–æ–ª-–≤–æ –∑–∞–ª–æ–≤
{—Ä–∞–π–æ–Ω_1}	{—á–∏—Å–ª–æ_1}
{—Ä–∞–π–æ–Ω_2}	{—á–∏—Å–ª–æ_2}
...	...`,
          type: 'reference',
          format: 'text',
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: '2',
          name: '–û—Ç—á—ë—Ç –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º',
          description: '–ê–Ω–∞–ª–∏–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≥–æ—Ä–æ–¥–∞–º —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π',
          content: `üìä –û—Ç—á—ë—Ç –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
–î–∞—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è: {–¥–∞—Ç–∞_—Å–æ–∑–¥–∞–Ω–∏—è}

üë• –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {–æ–±—â–µ–µ_–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π}
–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {–∞–∫—Ç–∏–≤–Ω—ã—Ö_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π}
–ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –º–µ—Å—è—Ü: {–Ω–æ–≤—ã—Ö_–∑–∞_–º–µ—Å—è—Ü}

üèôÔ∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≥–æ—Ä–æ–¥–∞–º
–ì–æ—Ä–æ–¥	–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π	–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞
{–≥–æ—Ä–æ–¥_1}	{–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_1}	{–ø—Ä–æ—Ü–µ–Ω—Ç_1}%
{–≥–æ—Ä–æ–¥_2}	{–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_2}	{–ø—Ä–æ—Ü–µ–Ω—Ç_2}%
...	...	...

üë´ –î–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
–°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç: {—Å—Ä–µ–¥–Ω–∏–π_–≤–æ–∑—Ä–∞—Å—Ç} –ª–µ—Ç
–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É:
- –ú—É–∂—á–∏–Ω—ã: {–º—É–∂—á–∏–Ω} ({–ø—Ä–æ—Ü–µ–Ω—Ç_–º—É–∂—á–∏–Ω}%)
- –ñ–µ–Ω—â–∏–Ω—ã: {–∂–µ–Ω—â–∏–Ω} ({–ø—Ä–æ—Ü–µ–Ω—Ç_–∂–µ–Ω—â–∏–Ω}%)

üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –¥–µ–Ω—å: {—Å—Ä–µ–¥–Ω—è—è_–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å_–≤_–¥–µ–Ω—å}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤—ã—Å–æ–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é: {–≤—ã—Å–æ–∫–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–∏–∑–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é: {–Ω–∏–∑–∫–æ–∞–∫—Ç–∏–≤–Ω—ã—Ö}

üèÜ –¢–æ–ø –≥–æ—Ä–æ–¥–æ–≤ –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
–ì–æ—Ä–æ–¥	–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å	–†–µ–π—Ç–∏–Ω–≥
{—Ç–æ–ø_–≥–æ—Ä–æ–¥_1}	{–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å_1}	{—Ä–µ–π—Ç–∏–Ω–≥_1}
{—Ç–æ–ø_–≥–æ—Ä–æ–¥_2}	{–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å_2}	{—Ä–µ–π—Ç–∏–Ω–≥_2}
...	...	...`,
          type: 'report',
          format: 'text',
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: '3',
          name: '–ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
          description: '–û—Ç—á—ë—Ç –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏',
          content: `üìà –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
–î–∞—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è: {–¥–∞—Ç–∞_—Å–æ–∑–¥–∞–Ω–∏—è}
–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞: {–ø–µ—Ä–∏–æ–¥_–∞–Ω–∞–ª–∏–∑–∞}

üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {–æ–±—â–µ–µ_–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–∞–∫—Ç–∏–≤–Ω—ã—Ö}
–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –¥–µ–Ω—å: {—Å—Ä–µ–¥–Ω—è—è_–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å_–≤_–¥–µ–Ω—å}
–ü–∏–∫–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {–ø–∏–∫–æ–≤–∞—è_–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å}
–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è_–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å}

üìÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏	–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π	–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞
–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫	{–ø–Ω_–∞–∫—Ç–∏–≤–Ω—ã—Ö}	{–ø–Ω_–ø—Ä–æ—Ü–µ–Ω—Ç}%
–í—Ç–æ—Ä–Ω–∏–∫	{–≤—Ç_–∞–∫—Ç–∏–≤–Ω—ã—Ö}	{–≤—Ç_–ø—Ä–æ—Ü–µ–Ω—Ç}%
–°—Ä–µ–¥–∞	{—Å—Ä_–∞–∫—Ç–∏–≤–Ω—ã—Ö}	{—Å—Ä_–ø—Ä–æ—Ü–µ–Ω—Ç}%
–ß–µ—Ç–≤–µ—Ä–≥	{—á—Ç_–∞–∫—Ç–∏–≤–Ω—ã—Ö}	{—á—Ç_–ø—Ä–æ—Ü–µ–Ω—Ç}%
–ü—è—Ç–Ω–∏—Ü–∞	{–ø—Ç_–∞–∫—Ç–∏–≤–Ω—ã—Ö}	{–ø—Ç_–ø—Ä–æ—Ü–µ–Ω—Ç}%
–°—É–±–±–æ—Ç–∞	{—Å–±_–∞–∫—Ç–∏–≤–Ω—ã—Ö}	{—Å–±_–ø—Ä–æ—Ü–µ–Ω—Ç}%
–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ	{–≤—Å_–∞–∫—Ç–∏–≤–Ω—ã—Ö}	{–≤—Å_–ø—Ä–æ—Ü–µ–Ω—Ç}%

‚è∞ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
–í—Ä–µ–º—è	–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
06:00-09:00	{—É—Ç—Ä–æ_–∞–∫—Ç–∏–≤–Ω—ã—Ö}
09:00-12:00	{—É—Ç—Ä–æ_–¥–µ–Ω—å_–∞–∫—Ç–∏–≤–Ω—ã—Ö}
12:00-15:00	{–¥–µ–Ω—å_–∞–∫—Ç–∏–≤–Ω—ã—Ö}
15:00-18:00	{–¥–µ–Ω—å_–≤–µ—á–µ—Ä_–∞–∫—Ç–∏–≤–Ω—ã—Ö}
18:00-21:00	{–≤–µ—á–µ—Ä_–∞–∫—Ç–∏–≤–Ω—ã—Ö}
21:00-00:00	{–Ω–æ—á—å_–∞–∫—Ç–∏–≤–Ω—ã—Ö}

üèÜ –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å	–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π	–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
{—Ç–æ–ø_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_1}	{–¥–Ω–∏_1}	{–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å_1}
{—Ç–æ–ø_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_2}	{–¥–Ω–∏_2}	{–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å_2}
...	...	...

üìâ –¢—Ä–µ–Ω–¥—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
–¢—Ä–µ–Ω–¥ –∑–∞ –Ω–µ–¥–µ–ª—é: {—Ç—Ä–µ–Ω–¥_–Ω–µ–¥–µ–ª—è}
–¢—Ä–µ–Ω–¥ –∑–∞ –º–µ—Å—è—Ü: {—Ç—Ä–µ–Ω–¥_–º–µ—Å—è—Ü}
–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é: {–ø—Ä–æ–≥–Ω–æ–∑}`,
          type: 'report',
          format: 'text',
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ];
      
      // –í—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã, –∑–∞–º–µ–Ω—è—è —Å—Ç–∞—Ä—ã–µ
      saveTemplates(defaultTemplates);
      console.log('–®–∞–±–ª–æ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö');
      
    } catch (error) {
      console.error('Error loading templates:', error);
    }
  };

  const saveTemplates = (newTemplates: Template[]) => {
    try {
      localStorage.setItem('reportTemplates', JSON.stringify(newTemplates));
      setTemplates(newTemplates);
    } catch (error) {
      console.error('Error saving templates:', error);
    }
  };

  const handleCreateTemplate = () => {
    setFormData({
      name: '',
      description: '',
      content: '',
      type: 'report',
      format: 'text'
    });
    setUploadedFile(null);
    setEditingTemplate(null);
    setIsEditing(false);
    setShowForm(true);
  };

  const handleEditTemplate = (template: Template) => {
    setFormData({
      name: template.name,
      description: template.description,
      content: template.content,
      type: template.type,
      format: template.format
    });
    setUploadedFile(null);
    setEditingTemplate(template);
    setIsEditing(true);
    setShowForm(true);
  };

  const handleSaveTemplate = () => {
    if (!formData.name.trim()) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–æ–≤ PDF/DOC –∑–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª
    if ((formData.format === 'pdf' || formData.format === 'doc') && !uploadedFile && !editingTemplate?.fileUrl) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –µ—Å—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    if (formData.format === 'text' && !formData.content.trim()) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —à–∞–±–ª–æ–Ω–∞');
      return;
    }

    const newTemplate: Template = {
      id: editingTemplate?.id || Date.now().toString(),
      name: formData.name.trim(),
      description: formData.description.trim(),
      content: formData.content.trim(),
      type: formData.type,
      format: formData.format,
      fileUrl: editingTemplate?.fileUrl || (uploadedFile ? URL.createObjectURL(uploadedFile) : undefined),
      createdAt: editingTemplate?.createdAt || new Date(),
      updatedAt: new Date()
    };

    let newTemplates: Template[];
    if (isEditing) {
      newTemplates = templates.map(t => t.id === editingTemplate?.id ? newTemplate : t);
    } else {
      newTemplates = [...templates, newTemplate];
    }

    saveTemplates(newTemplates);
    setShowForm(false);
    setFormData({ name: '', description: '', content: '', type: 'report', format: 'text' });
    setEditingTemplate(null);
    setIsEditing(false);
  };

  const handleDeleteTemplate = (templateId: string) => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —à–∞–±–ª–æ–Ω?')) {
      const newTemplates = templates.filter(t => t.id !== templateId);
      saveTemplates(newTemplates);
    }
  };

  const handleUseTemplate = (template: Template) => {
    if (template.format === 'text') {
      // –î–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞
      setSelectedTemplateForReport(template);
      setShowQueryInput(true);
    } else {
      // –î–ª—è PDF/DOC —à–∞–±–ª–æ–Ω–æ–≤ —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —á–∞—Ç
      if (onTemplateSelect) {
        onTemplateSelect(template);
        onClose();
      }
    }
  };

  const handleGenerateReport = () => {
    if (!queryInput.trim()) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞');
      return;
    }

    if (onTemplateSelect && selectedTemplateForReport) {
      onTemplateSelect(selectedTemplateForReport, queryInput.trim());
      setShowQueryInput(false);
      setQueryInput('');
      setSelectedTemplateForReport(null);
      onClose();
    }
  };

  const handleExportTemplates = () => {
    try {
      const dataStr = JSON.stringify(templates, null, 2);
      const dataBlob = new Blob([dataStr], { type: 'application/json' });
      const url = URL.createObjectURL(dataBlob);
      const link = document.createElement('a');
      link.href = url;
      link.download = 'report-templates.json';
      link.click();
      URL.revokeObjectURL(url);
    } catch (error) {
      console.error('Error exporting templates:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —à–∞–±–ª–æ–Ω–æ–≤');
    }
  };

  const handleImportTemplates = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    const reader = new FileReader();
    reader.onload = (e) => {
      try {
        const importedTemplates = JSON.parse(e.target?.result as string);
        if (Array.isArray(importedTemplates)) {
          const newTemplates = [...templates, ...importedTemplates];
          saveTemplates(newTemplates);
          alert(`–ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${importedTemplates.length} —à–∞–±–ª–æ–Ω–æ–≤`);
        } else {
          alert('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞');
        }
      } catch (error) {
        console.error('Error importing templates:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ —à–∞–±–ª–æ–Ω–æ–≤');
      }
    };
    reader.readAsText(file);
  };

  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (!file) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
    if (!allowedTypes.includes(file.type)) {
      alert('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã PDF –∏ DOC/DOCX');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 10MB)
    if (file.size > 10 * 1024 * 1024) {
      alert('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10MB');
      return;
    }

    setUploadedFile(file);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
    if (file.type === 'application/pdf') {
      setFormData({ ...formData, format: 'pdf' });
    } else if (file.type.includes('word')) {
      setFormData({ ...formData, format: 'doc' });
    }
  };

  const handleRemoveFile = () => {
    setUploadedFile(null);
    setFormData({ ...formData, format: 'text' });
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
  const highlightText = (text: string, query: string) => {
    if (!query) return text;
    const regex = new RegExp(`(${query})`, 'gi');
    return text.replace(regex, '<mark class="bg-yellow-200">$1</mark>');
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–æ–≤ –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
  const filteredTemplates = templates.filter(template =>
    template.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
    template.description.toLowerCase().includes(searchQuery.toLowerCase()) ||
    template.content.toLowerCase().includes(searchQuery.toLowerCase())
  );

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-hidden">
        {/* Header */}
        <div className="flex items-center justify-between p-6 border-b border-gray-200">
          <div className="flex items-center space-x-3">
            <FiFileText className="text-blue-600" size={24} />
            <div>
              <h2 className="text-2xl font-bold text-gray-900">–®–∞–±–ª–æ–Ω—ã –æ—Ç—á—ë—Ç–æ–≤</h2>
              <p className="text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞</p>
            </div>
          </div>
          <div className="flex items-center space-x-4">
            {/* –§–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞ */}
            <div className="flex items-center space-x-2">
              <span className="text-sm font-medium text-gray-700">–§–æ—Ä–º–∞—Ç:</span>
              <select
                value={selectedFormat}
                onChange={(e) => onFormatChange?.(e.target.value as 'txt' | 'doc' | 'pdf')}
                className="px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
              >
                <option value="txt">TXT</option>
                <option value="doc">DOC</option>
                <option value="pdf">PDF</option>
              </select>
            </div>
            <button
              onClick={onClose}
              className="p-2 text-gray-600 hover:text-gray-800"
            >
              <FiX size={24} />
            </button>
          </div>
        </div>

        <div className="flex h-[calc(90vh-120px)]">
          {/* Sidebar with templates list */}
          <div className="w-1/3 border-r border-gray-200 overflow-y-auto">
            <div className="p-4">
              <button
                onClick={handleCreateTemplate}
                className="w-full flex items-center justify-center p-3 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors mb-4"
              >
                <FiPlus className="mr-2" size={16} />
                –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω
              </button>

              {/* –ü–æ–∏—Å–∫ –ø–æ —à–∞–±–ª–æ–Ω–∞–º */}
              <div className="mb-4">
                <div className="relative">
                  <input
                    type="text"
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –æ–ø–∏—Å–∞–Ω–∏—é –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É..."
                    className="w-full p-3 pl-10 pr-10 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent text-sm"
                  />
                  <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                    <svg className="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                  </div>
                  {searchQuery && (
                    <button
                      onClick={() => setSearchQuery('')}
                      className="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600"
                    >
                      <svg className="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                      </svg>
                    </button>
                  )}
                </div>
                {searchQuery && (
                  <div className="mt-2 text-xs text-gray-500">
                    –ù–∞–π–¥–µ–Ω–æ: {filteredTemplates.length} –∏–∑ {templates.length} —à–∞–±–ª–æ–Ω–æ–≤
                  </div>
                )}
              </div>

              <div className="space-y-2">
                {filteredTemplates.length === 0 && searchQuery ? (
                  <div className="text-center py-8 text-gray-500">
                    <svg className="h-12 w-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                    <p className="text-sm">–ü–æ –∑–∞–ø—Ä–æ—Å—É "{searchQuery}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
                    <button
                      onClick={() => setSearchQuery('')}
                      className="mt-2 text-xs text-primary hover:text-primary-dark underline"
                    >
                      –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫
                    </button>
                  </div>
                ) : (
                  filteredTemplates.map((template) => (
                    <div
                      key={template.id}
                      className="p-3 border border-gray-200 rounded-lg hover:border-primary transition-colors cursor-pointer"
                      onClick={() => handleUseTemplate(template)}
                    >
                    <div className="flex items-center justify-between mb-2">
                      <h3 
                        className="font-medium text-gray-800 truncate"
                        dangerouslySetInnerHTML={{ 
                          __html: searchQuery ? highlightText(template.name, searchQuery) : template.name 
                        }}
                      />
                      <div className="flex items-center space-x-1">
                        <button
                          onClick={(e) => {
                            e.stopPropagation();
                            handleEditTemplate(template);
                          }}
                          className="p-1 text-gray-500 hover:text-blue-600 transition-colors"
                          title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                        >
                          <FiEdit2 size={14} />
                        </button>
                        <button
                          onClick={(e) => {
                            e.stopPropagation();
                            handleDeleteTemplate(template.id);
                          }}
                          className="p-1 text-gray-500 hover:text-red-600 transition-colors"
                          title="–£–¥–∞–ª–∏—Ç—å"
                        >
                          <FiTrash2 size={14} />
                        </button>
                      </div>
                    </div>
                    <p 
                      className="text-sm text-gray-600 mb-2 line-clamp-2"
                      dangerouslySetInnerHTML={{ 
                        __html: searchQuery ? highlightText(template.description, searchQuery) : template.description 
                      }}
                    />
                                         <div className="flex items-center justify-between text-xs text-gray-500">
                       <div className="flex space-x-1">
                         <span className={`px-2 py-1 rounded-full ${
                           template.type === 'report' 
                             ? 'bg-blue-100 text-blue-800' 
                             : 'bg-green-100 text-green-800'
                         }`}>
                           {template.type === 'report' ? '–û—Ç—á—ë—Ç' : '–°–ø—Ä–∞–≤–∫–∞'}
                         </span>
                                                   <span className={`px-2 py-1 rounded-full ${
                            (!template.format || template.format === 'text')
                              ? 'bg-gray-100 text-gray-800'
                              : template.format === 'pdf'
                              ? 'bg-red-100 text-red-800'
                              : 'bg-blue-100 text-blue-800'
                          }`}>
                            {(template.format || 'text').toUpperCase()}
                          </span>
                       </div>
                       <span>{new Date(template.updatedAt).toLocaleDateString()}</span>
                     </div>
                  </div>
                ))
                )}
              </div>
            </div>
          </div>

          {/* Main content area */}
          <div className="flex-1 overflow-y-auto">
            {showForm ? (
              <div className="p-6">
                <div className="flex items-center justify-between mb-6">
                  <h3 className="text-xl font-semibold text-gray-800">
                    {isEditing ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω' : '–°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω'}
                  </h3>
                  <button
                    onClick={() => setShowForm(false)}
                    className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors"
                  >
                    <FiX size={20} />
                  </button>
                </div>

                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ *
                    </label>
                    <input
                      type="text"
                      value={formData.name}
                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                      className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –û–ø–∏—Å–∞–Ω–∏–µ
                    </label>
                    <textarea
                      value={formData.description}
                      onChange={(e) => setFormData({ ...formData, description: e.target.value })}
                      className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                      rows={3}
                      placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞"
                    />
                  </div>

                                     <div>
                     <label className="block text-sm font-medium text-gray-700 mb-2">
                       –¢–∏–ø —à–∞–±–ª–æ–Ω–∞
                     </label>
                     <select
                       value={formData.type}
                       onChange={(e) => setFormData({ ...formData, type: e.target.value as 'report' | 'reference' })}
                       className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                     >
                       <option value="report">–û—Ç—á—ë—Ç</option>
                       <option value="reference">–°–ø—Ä–∞–≤–∫–∞</option>
                     </select>
                   </div>

                   <div>
                     <label className="block text-sm font-medium text-gray-700 mb-2">
                       –§–æ—Ä–º–∞—Ç —à–∞–±–ª–æ–Ω–∞
                     </label>
                     <select
                       value={formData.format}
                       onChange={(e) => setFormData({ ...formData, format: e.target.value as 'text' | 'pdf' | 'doc' })}
                       className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                     >
                       <option value="text">–¢–µ–∫—Å—Ç–æ–≤—ã–π</option>
                       <option value="pdf">PDF</option>
                       <option value="doc">DOC/DOCX</option>
                     </select>
                   </div>

                   {(formData.format === 'pdf' || formData.format === 'doc') && (
                     <div>
                       <label className="block text-sm font-medium text-gray-700 mb-2">
                         –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —à–∞–±–ª–æ–Ω–∞ *
                       </label>
                       <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
                         {uploadedFile ? (
                           <div>
                             <p className="text-sm text-gray-600 mb-2">–ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: {uploadedFile.name}</p>
                             <button
                               type="button"
                               onClick={handleRemoveFile}
                               className="px-3 py-1 bg-red-100 text-red-800 rounded text-sm hover:bg-red-200"
                             >
                               –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª
                             </button>
                           </div>
                         ) : (
                           <div>
                             <p className="text-sm text-gray-600 mb-2">
                               –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
                             </p>
                             <input
                               type="file"
                               accept=".pdf,.doc,.docx"
                               onChange={handleFileUpload}
                               className="hidden"
                               id="template-file-upload"
                             />
                             <label
                               htmlFor="template-file-upload"
                               className="px-4 py-2 bg-primary text-white rounded hover:bg-primary-dark cursor-pointer"
                             >
                               –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
                             </label>
                           </div>
                         )}
                       </div>
                     </div>
                   )}

                   {formData.format === 'text' && (
                     <div>
                       <label className="block text-sm font-medium text-gray-700 mb-2">
                         –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —à–∞–±–ª–æ–Ω–∞ *
                       </label>
                       <textarea
                         value={formData.content}
                         onChange={(e) => setFormData({ ...formData, content: e.target.value })}
                         className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent font-mono text-sm"
                         rows={12}
                         placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —à–∞–±–ª–æ–Ω–∞..."
                       />
                       <p className="text-xs text-gray-500 mt-1">
                         –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ {'{variable}'} –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                       </p>
                     </div>
                   )}

                  <div className="flex justify-end space-x-3 pt-4">
                    <button
                      onClick={() => setShowForm(false)}
                      className="px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
                    >
                      –û—Ç–º–µ–Ω–∞
                    </button>
                    <button
                      onClick={handleSaveTemplate}
                      className="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors flex items-center"
                    >
                      <FiSave className="mr-2" size={16} />
                      {isEditing ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–°–æ–∑–¥–∞—Ç—å'}
                    </button>
                  </div>
                </div>
              </div>
            ) : showQueryInput ? (
              <div className="p-6">
                <div className="flex items-center justify-between mb-6">
                  <h3 className="text-xl font-semibold text-gray-800">
                    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞
                  </h3>
                  <button
                    onClick={() => {
                      setShowQueryInput(false);
                      setQueryInput('');
                      setSelectedTemplateForReport(null);
                    }}
                    className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors"
                  >
                    <FiX size={20} />
                  </button>
                </div>

                <div className="space-y-4">
                  <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                    <h4 className="font-medium text-blue-800 mb-2">–í—ã–±—Ä–∞–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω:</h4>
                    <p className="text-blue-700">{selectedTemplateForReport?.name}</p>
                    <p className="text-sm text-blue-600 mt-1">{selectedTemplateForReport?.description}</p>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –ó–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞ *
                    </label>
                    <textarea
                      value={queryInput}
                      onChange={(e) => setQueryInput(e.target.value)}
                      className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary focus:border-transparent"
                      rows={4}
                      placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞..."
                    />
                    <p className="text-xs text-gray-500 mt-1">
                      –ù–∞–ø—Ä–∏–º–µ—Ä: "–ü–æ–∫–∞–∂–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≥–æ—Ä–æ–¥–∞–º" –∏–ª–∏ "–°–æ–∑–¥–∞–π –æ—Ç—á—ë—Ç –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü"
                    </p>
                  </div>

                  <div className="flex justify-end space-x-3 pt-4">
                    <button
                      onClick={() => {
                        setShowQueryInput(false);
                        setQueryInput('');
                        setSelectedTemplateForReport(null);
                      }}
                      className="px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
                    >
                      –û—Ç–º–µ–Ω–∞
                    </button>
                    <button
                      onClick={handleGenerateReport}
                      className="px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors flex items-center"
                    >
                      <FiFileText className="mr-2" size={16} />
                      –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç
                    </button>
                  </div>
                </div>
              </div>
            ) : (
              <div className="p-6 text-center text-gray-500">
                <FiFileText size={48} className="mx-auto mb-4 text-gray-300" />
                <p>–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω —Å–ª–µ–≤–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π</p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
} 